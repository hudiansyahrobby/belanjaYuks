openapi: 3.0.0

info:
  title: "Ecommerce APP API"
  description: "API for ecommerce app"
  version: "1.0.0"
servers:
  - url: http://localhost:8000/api/v1
paths: 
  /shops:
    post:
      description: "Create new shop (ONLY USER)"
      tags:
        - "Shops"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf: 
                - $ref: '#/components/schemas/Shop'
      responses:
        201:
          description: "Created"
        400:
          description: "Bad Request"
        401:
          description: "Access Denied"
        422:
          description: "Validation Error"
        500:
          description: "Server Error"
    get:
      description: "Get All shops"
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: shop list at particular page  
        - in: query
          name: size
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          description: Search items
        - in: query
          name: sort
          schema:
            type: string
            enum: [latest, oldest]
          description: sort shop by latest or oldest
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"
    put:
      description: "update shop by id (ONLY SHOP OWNER)"
      tags:
        - "Shops"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf: 
                - $ref: '#/components/schemas/Shop'
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        401:
          description: "Access Denied"
        404:
          description: "Shop not found"
        422:
          description: "Validation Error"
        500:
          description: "Server Error"
    delete:
      description: "Delete my shop (ONLY SHOP OWNER)"
      security:
        - bearerAuth: []
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        404:
          description: "Shop not found"
        500:
          description: "Server Error"
  /shops/{shopId}:
    get:
      description: "Get shops detail"
      parameters:
        - in: path
          required: true
          name: shopId
          schema:
            type: string
          description: Get shop detail by id  
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        404:
          description: "shop not found"
        500:
          description: "Server Error"
    delete:
      description: "Delete Shop By ID (ONLY ADMIN)"
      parameters:
        - in: path
          required: true
          name: shopId
          schema:
            type: string
          description: delete shop by id  
      security:
        - bearerAuth: []
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        404:
          description: "shop not found"
        500:
          description: "Server Error"
  /shops/products:
    get:
      description: "Get My Shop Product"
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: shop list at particular page  
        - in: query
          name: size
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: sort
          schema:
            type: string
            enum: [latest, oldest]
          description: sort shop by latest or oldest
      security:
        - bearerAuth: []
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"
  /shops/products/{shopId}:
    get:
      description: "Get All Shop Product By Shop ID"
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: shop list at particular page  
        - in: query
          name: size
          schema:
            type: integer
          description: The numbers of items to return
        - in: path
          required: true
          name: shopId
          schema:
            type: string
          description: Shop ID
        - in: query
          name: sort
          schema:
            type: string
            enum: [latest, oldest]
          description: sort shop by latest or oldest
      tags:
        - "Shops"
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"
components:
  schemas:
    Shop:
      type: object
      properties:
        name:
          type: string
          example: "Garuda shop"
        location:
          type: string
          example: "Jakarta"
        images:
          type: string
          format: binary
        description:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. "
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT